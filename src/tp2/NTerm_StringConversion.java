/* This file was generated by SableCC ( http://sablecc.org ). */

package tp2;

public class NTerm_StringConversion
    extends NTerm {

  private final int line;
  private final int pos;
  private final N$17 eKeyword;
  private final N$0 eLPar;
  private final NExp eExp;
  private final N$1 e$1;

  @Override
  public void apply(Walker walker) {
    walker.inTerm_StringConversion(this);
    walker.caseTerm_StringConversion(this);
    walker.outTerm_StringConversion(this);
  }

  @Override
  public void applyOnChildren(Walker walker) {
    this.eKeyword.apply(walker);
    this.eLPar.apply(walker);
    this.eExp.apply(walker);
    this.e$1.apply(walker);
  }

  NTerm_StringConversion(int line, int pos, N$17 pKeyword, N$0 pLPar, NExp pExp, N$1 p$1) {
    this.line = line;
    this.pos = pos;
    this.eKeyword = pKeyword;
    this.eLPar = pLPar;
    this.eExp = pExp;
    this.e$1 = p$1;
  }

  @Override
  public Type getType() {
    return Type.T_Term_StringConversion;
  }

  @Override
  public ProductionType getProductionType() {
    return ProductionType.T_Term;
  }

  @Override
  InternalType getInternalType() {
    return InternalType.T_Term_StringConversion;
  }

  public Token get_Keyword() {
    return this.eKeyword;
  }

  public Token get_LPar() {
    return this.eLPar;
  }

  public NExp get_Exp() {
    return this.eExp;
  }

  N$17 internalGetKeyword() {
    return this.eKeyword;
  }

  N$0 internalGetLPar() {
    return this.eLPar;
  }

  NExp internalGetExp() {
    return this.eExp;
  }

  N$1 internalGet$1() {
    return this.e$1;
  }
}
