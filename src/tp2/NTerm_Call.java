/* This file was generated by SableCC ( http://sablecc.org ). */

package tp2;

public class NTerm_Call
    extends NTerm {

  private final int line;
  private final int pos;
  private final NId eId;
  private final N$0 eLPar;
  private final NArgs eArgs;
  private final N$1 e$1;

  @Override
  public void apply(Walker walker) {
    walker.inTerm_Call(this);
    walker.caseTerm_Call(this);
    walker.outTerm_Call(this);
  }

  @Override
  public void applyOnChildren(Walker walker) {
    this.eId.apply(walker);
    this.eLPar.apply(walker);
    this.eArgs.apply(walker);
    this.e$1.apply(walker);
  }

  NTerm_Call(int line, int pos, NId pId, N$0 pLPar, NArgs pArgs, N$1 p$1) {
    this.line = line;
    this.pos = pos;
    this.eId = pId;
    this.eLPar = pLPar;
    this.eArgs = pArgs;
    this.e$1 = p$1;
  }

  @Override
  public Type getType() {
    return Type.T_Term_Call;
  }

  @Override
  public ProductionType getProductionType() {
    return ProductionType.T_Term;
  }

  @Override
  InternalType getInternalType() {
    return InternalType.T_Term_Call;
  }

  public NId get_Id() {
    return this.eId;
  }

  public Token get_LPar() {
    return this.eLPar;
  }

  public NArgs get_Args() {
    return this.eArgs;
  }

  NId internalGetId() {
    return this.eId;
  }

  N$0 internalGetLPar() {
    return this.eLPar;
  }

  NArgs internalGetArgs() {
    return this.eArgs;
  }

  N$1 internalGet$1() {
    return this.e$1;
  }
}
